package Editor.tile;

import java.awt.BorderLayout;
import java.awt.Dimension;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.filechooser.FileNameExtensionFilter;

import Editor.comp.FileField;
import Editor.comp.Form;

public class OpenTilesetDialog extends JDialog
{
	private FileField fileFld;
	
	private JSpinner rowsSpinner, colsSpinner;
	
	private JButton openBtn, closeBtn;
		
	private boolean validSource;
	
	private TileSelector selector;
	
	public OpenTilesetDialog(TileSelector selector) 
	{
		this.selector = selector;
		
		setModalityType(ModalityType.APPLICATION_MODAL);
		
		JLabel fileLbl = new JLabel("Source"),
			   rowsLbl = new JLabel("Rows"),
			   colsLbl = new JLabel("Cols");
		
		fileFld = new FileField();
	
		rowsSpinner = new JSpinner();
		colsSpinner = new JSpinner();
		
		JButton openBtn = new JButton("Open"),
			    closeBtn = new JButton("Close");
		
		SpinnerNumberModel rowsModel = new SpinnerNumberModel(1, 1, 40, 1),
						   colsModel = new SpinnerNumberModel(1, 1, 40, 1);
	
		FileNameExtensionFilter filter = 
				new FileNameExtensionFilter("img", "jpg", "jpeg", "png");

		fileFld.setFileFilter(filter);
		
		Form form = new Form();
		
		form.addComponent(fileLbl, 0, 0, 1);
		form.addField(fileFld, 1, 0, 1);
		form.addComponent(rowsLbl, 0, 1, 1);
		form.addComponent(rowsSpinner, 1, 1, 1);
		form.addComponent(colsLbl, 0, 2, 1);
		form.addComponent(colsSpinner, 1, 2, 1);
		
		JPanel btnPnl = new JPanel();
		
		btnPnl.add(openBtn); btnPnl.add(closeBtn);
		
		setLayout(new BorderLayout());
		
		add(form, BorderLayout.CENTER);
		add(form, BorderLayout.SOUTH);
		
		setSize(new Dimension(400, 200));
		
		setTitle("Tileset");
	
		openBtn.addActionListener(e -> setVisible(false));
		closeBtn.addActionListener(e -> setVisible(false));
	
		validSource = false;
	}
	
	private void openTileset()
	{
		
	}
	
	private void close()
	{
		
	}
	
	public boolean validSource()
	{
		return validSource;
	}
	
	public int rows() {
		return (int) rowsSpinner.getValue();
	}
	
	public int cols() {
		return (int) colsSpinner.getValue();
	}
}
