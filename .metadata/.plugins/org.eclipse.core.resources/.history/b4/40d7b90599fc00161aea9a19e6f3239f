package Ability;

import java.awt.Color;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.Rectangle2D.Double;

import Graphic.Graphic;
import Graphic.GraphicsContext;
import Graphic.ShapeGraphic;
import Maths.Dimension2D;

public class CastingIndicator extends Graphic
{
	private ActiveAbility ability;
	
	private Rectangle2D.Double back, front;
	
	public CastingIndicator()
	{
		ability = null;
		
		back = new Rectangle2D.Double();
		front = new Rectangle2D.Double();
	}
	
	@Override
	protected void _paint(GraphicsContext gc)
	{	
		if(ability == null)
			return;
				
		double ratio = 
				ability.getElapsedSinceCast() * 1.0 /
				ability.getCastTime();
		
		ratio = ratio > 1 ? 1 : ratio;
	
		ShapeGraphic graph = new ShapeGraphic();
	
		Rectangle2D.Double rect = new Rectangle2D.Double(
				loc.x - 5, loc.y - 2.5, 10 * ratio, 5);
		
		graph.setShape(rect);
		graph.setPaint(Color.green);
	}
	
	public void setActiveAbility(
			ActiveAbility ability) {
		this.ability = ability;
	}

	@Override
	public Double getBound() {
		return null;
	}

	@Override
	public Object clone() {
		// TODO Auto-generated method stub
		return null;
	}
}
