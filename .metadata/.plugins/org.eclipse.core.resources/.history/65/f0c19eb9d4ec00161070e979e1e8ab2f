package GUI;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import javax.swing.ListModel;
import javax.swing.event.ListDataListener;

import Dialogue.Branch;
import Dialogue.Dialogue;

public class BranchList extends JList<Branch>
{
	private DialogueArea area;
	
	private List<Branch> branches;
	
	public BranchList(DialogueArea area, 
					  List<Branch> branches)
	{
		this.area = area;
		this.branches = branches;
	}
	
	private class MyModel implements ListModel<Branch>
	{
		@Override
		public Branch getElementAt(int index) {
			return branches.get(index);
		}

		@Override
		public int getSize() {
			return branches.size();
		}

		public void addListDataListener(ListDataListener e) {}
		public void removeListDataListener(ListDataListener e) {}
	}
	
	private class MyRenderer implements ListCellRenderer<Branch>,
		ActionListener
	{
		private JButton btn;
		
		private JList<? extends Branch> list;
		
		MyRenderer()
		{
			btn = new JButton();
		
			btn.addActionListener(this);
		}
		
		@Override
		public Component getListCellRendererComponent(
				JList<? extends Branch> list, Branch val,
				int index,
				boolean isSelected, boolean cellHasFocus) 
		{	
			this.list = list;
			
			btn.setText(val.getTransition());
			
			return null;
		}

		@Override
		public void actionPerformed(ActionEvent e) 
		{
			Dialogue next = list.getSelectedValue()
								.getDialogue();
			
			area.setDialogue(next);
		}
	}
}
