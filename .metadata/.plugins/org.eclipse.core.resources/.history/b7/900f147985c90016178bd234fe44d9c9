package Editor.headings;
import java.awt.BasicStroke;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;

import javax.swing.JPanel;

import Editor.EditorResources;
import Editor.SceneListener;
import Graphic.Camera;
import Graphic.GraphicsContext;
import Graphic.ShapeGraphic;
import Graphic.TextGraphic;
import Maths.Dimension2D;
import Tileset.TileMap;

public class RowHeading extends JPanel
	implements SceneListener
{
	private Camera camera;
	
	private EditorResources resources;
	
	public RowHeading(EditorResources resources, Camera camera)
	{
		this.resources = resources;
		this.camera = camera;
		
		resources.addSceneListener(this);
		
		setPreferredSize(new Dimension(25, 600));
	}
	
	public void paintComponent(Graphics g)
	{
		super.paintComponent(g);
		
		TileMap map = resources.scene.getTileMap();
		
		Rectangle2D.Double bound = camera.normalViewBound();
		
		int startRow = map.row(bound.y),
			endRow = map.row(bound.y + bound.height) + 1;
		
		Dimension2D.Double tileSize = map.tileSize();
	
		GraphicsContext gc = new GraphicsContext(
				(Graphics2D)g.create(), camera);
	
		double shapeWidth = camera.normalWidth(getWidth()),
			   shapeHeight = tileSize.getHeight();
		
		Rectangle2D.Double shape = new Rectangle2D.Double(
				0, 0, shapeWidth, shapeHeight);
		
		ShapeGraphic graph = new ShapeGraphic();
		TextGraphic txt = new TextGraphic();
				
		txt.setHeight(shapeHeight);
		graph.setShape(shape);
		graph.setFilled(false);
		graph.setStroke(new BasicStroke(1f));
		
		double y = camera.normalY(0);
		
		for(int row = startRow; row < endRow; row++)
		{
			double y = map.y(row);
			graph.setLoc(x + shape.width/2, y + shape.height/2);
			txt.setLoc(x, y + 5);
			txt.setText("" + col);

			graph.paint(gc);
			txt.paint(gc);
		}
		
		gc.g2d.dispose();
	}
	
	@Override
	public void sceneChanged()
	{
		repaint();
	}
}
