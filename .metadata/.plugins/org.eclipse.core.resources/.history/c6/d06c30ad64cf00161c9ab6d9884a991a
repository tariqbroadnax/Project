package Editor.tools;

import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.geom.Point2D;
import java.util.List;

import Editor.EditorResources;
import Editor.selection.SelectionHandler;
import Entity.Entity;
import Game.Scene;
import Graphic.Camera;
import Tileset.TMCell;
import Tileset.TileMap;

public class SelectTool implements Tool
{
	private boolean ignoreTileMap = true;
	
	private EditorResources resources;
	
	public SelectTool(EditorResources resources)
	{
		this.resources = resources;
	}
	
	private boolean entityCanBeSelected(Point2D.Double normLoc)
	{
		Scene scene = resources.scene;
		
		List<Entity> entities = 
				scene.entitiesVisibleAtLocation(normLoc);
	
		return !entities.isEmpty();
	}
	
	private boolean cellCanBeSelected(Point2D.Double normLoc)
	{
		TileMap tm = resources.scene.getTileMap();
		
		int row = tm.row(normLoc.y),
			col = tm.col(normLoc.x);
		
		return (0 <= row && row < tm.rows && 
				0 <= col && col < tm.cols);
	}
	
	private void selectEntity(Point2D.Double normLoc)
	{
		SelectionHandler handler = resources.getSelectionHandler();
		Entity ent = resources.scene
							  .entitiesVisibleAtLocation(normLoc)
							  .get(0);
			
		handler.setSelection(ent, true);
	}
	
	private void selectCell(Point2D.Double normLoc)
	{
		TileMap tm = resources.scene.getTileMap();
		
		int row = tm.row(normLoc.y),
			col = tm.col(normLoc.x);
		
		TMCell cell = tm.getCell(row, col);
		
		SelectionHandler handler = resources.getSelectionHandler();
		
		handler.setSelection(cell, true);
	}
	
	private void removeSelection()
	{
		SelectionHandler handler = resources.getSelectionHandler();
		
		handler.removeSelection();
	}
	
	@Override
	public void mousePressed(MouseEvent e)
	{
		Camera camera = resources.getCamera();
		
		Point mouseLoc = e.getPoint();
		Point2D.Double normLoc = camera.normalLocation(mouseLoc);
	
		SelectionHandler handler = resources.getSelectionHandler();
		
		Scene scene = resources.scene;
		
		Entity ent = scene.entityAtLoc(normLoc);
		
		if(ent != null)
		{
			handler.setSelection(ent, true);
			return;
		}
		
		TMCell cell = scene.getTileMap()
						   .cellAtLoc(normLoc);
		
		if(!ignoreTileMap && cell != null)
			handler.setSelection(cell, true);
		else
			handler.removeSelection();
	}
}
