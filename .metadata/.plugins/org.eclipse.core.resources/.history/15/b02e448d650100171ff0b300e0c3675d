package Inventory;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import Entity.Entity;
import Item.EquipItem;
import Item.Item;
import Item.UseItem;
import TestEntity.PetItem;

public class Inventory 
{
	private List<EquipItem> equips;
	
	private List<UseItem> consumables;
	
	private List<PetItem> pets;
	
	private List<InventoryListener> lists;
	
	private int cap;
	
	public Inventory()
	{
		equips = new ArrayList<EquipItem>();
		
		consumables = new ArrayList<UseItem>();
	
		pets = new ArrayList<PetItem>();
		
		lists = new ArrayList<InventoryListener>();
		
		cap = 300;
		
		UseItem item = new UseItem();
		
		item.setIconFile(new File("SwordIcon.PNG"));
		
		addUseItem(item);		
	}
	
	public void useItem(UseItem item, Entity ent)
	{
		if(consumables.contains(item))
		{
			item.use(ent);
		
			if(item.quantity() == 0)
				itemRemoved();
		}
	}
	
	private void itemAdded() 
	{
		List<InventoryListener> copy = new ArrayList<InventoryListener>(lists);
	
		for(InventoryListener list : copy)
			list.itemAdded();
	}
	
	private void itemRemoved()
	{
		List<InventoryListener> copy = new ArrayList<InventoryListener>(lists);
		
		for(InventoryListener list : copy)
			list.itemRemoved();
	}
	
	public void addEquipItem(EquipItem equip) 
	{
		equips.add(equip);	
		
		itemAdded();
	}

	public void removeEquipItem(EquipItem equip) {
		equips.remove(equip);
	}
	
	public void addItem(Item item) {
		
	}
	
	public void removeItem(Item item) {
		
	}
	
	public void addUseItem(
			UseItem consumable) 
	{
		consumables.add(consumable);
	
		itemAdded();
	}
	
	public void removeUseItem(UseItem consumable) {
		consumables.remove(consumable);
	}
	
	public int itemCount(int id) 
	{
		int count = 0;
		
		for(Item item : equips)
			if(item.getID() == id)
				count++;
		
		for(Item item : consumables)
			if(item.getID() == id)
				count++;
		
		return count;
	}
	
	public List<UseItem> getUseItems() {
		return consumables;
	}
	
	public int getQuantity(Item item) {
		return -1;
	}
	
	public int size() 
	{
		int size = 0;
		
		for(Item item : equips)
			size += item.quantity();
		
		for(Item item : consumables)
			size += item.quantity();
		
		return size;
	}
	
	public int capacity() {
		return cap;
	}
	
	public void addInventoryListener(InventoryListener list) {
		lists.add(list);
	}
	
	public void removeInventoryListener(InventoryListener list) {
		lists.remove(list);
	}
}
