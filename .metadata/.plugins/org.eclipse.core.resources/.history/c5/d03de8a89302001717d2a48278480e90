package Behavior;

import java.awt.geom.Point2D;
import java.time.Duration;

import Ability.BasicAttack;
import Entity.Entity;
import EntityComponent.AbilityComponent;

public class MonsterBehavior extends Behavior
{
	private static final long RECENTLY_DUR = 3000;
	
	private Entity player;
	
	private AbilityComponent abilityComp;
	private BasicAttack attack;
	
	private double viewRange = 30;
	
	private long durSinceLastAttack = 0;
	
	public void start()
	{
		player = src.getSceneLoc()
					.getGame()
					.getPlayer();
	}
	
	@Override
	public void update(Duration delta) 
	{
		durSinceLastAttack += delta.toMillis();
		
		if(playerInRange() || playerAttackedRecently())
		{
			if(playerInAttackRange())
			{
				attackPlayer();
			}
			else
				moveCloser();
		}
	}

	private boolean playerAttackedRecently() {
		return durSinceLastAttack < RECENTLY_DUR;
	}

	private boolean playerInRange() 
	{
		Point2D.Double playerLoc = player.getLoc(),
					   srcLoc = src.getLoc();
	
		return playerLoc.distanceSq(srcLoc) < 
			   viewRange * viewRange;
	}
}
