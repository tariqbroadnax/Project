package Modifiers;

import java.util.EnumSet;

import Entity.Entity;
import EntityComponent.CombatComponent;
import EntityComponent.CombatListener;

public class CombatEffect extends GradualEffect
	implements CombatListener
{
	private EnumSet<CombatEvent> set;
		
	public CombatEffect()
	{
		set = EnumSet.noneOf(CombatEvent.class);		
	}
	
	public CombatEffect(CombatEffect effect)
	{
		set = EnumSet.copyOf(effect.set);
	}
	
	@Override
	public void start() 
	{
		super.start();
	
		src.get(CombatComponent.class)
		   .addCombatListener(this);
	}
	
	@Override
	public void stop()
	{
		super.stop();
		
		src.get(CombatComponent.class)
		   .removeCombatListener(this);
	}

	@Override
	public void entityAttacked(Entity ent, double damage) 
	{
		if(set.contains(CombatEvent.ENTITY_ATTACKED))
			effect.apply();
	}
	
	@Override
	public void entityAttacks(Entity ent)
	{
		if(set.contains(CombatEvent.ENTITY_ATTACKS))
			effect.apply();
	}
	
	@Override
	public void entityKilled(Entity ent)
	{
		if(set.contains(CombatEvent.ENTITY_KILLED))
			effect.apply();
	}
	
	public void addCombatEvent(CombatEvent e) {
		set.add(e);
	}
	
	public void removeCombatEvent(CombatEvent e) {
		set.remove(e);
	}
	
	@Override
	public Object clone() {
		return new CombatEffect(this);
	}
}
