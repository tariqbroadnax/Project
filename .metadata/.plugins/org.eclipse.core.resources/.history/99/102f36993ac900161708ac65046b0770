package Editor.headings;

import java.awt.BasicStroke;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;

import javax.swing.JPanel;

import Editor.EditorResources;
import Editor.SceneListener;
import Graphic.Camera;
import Graphic.GraphicsContext;
import Graphic.ShapeGraphic;
import Maths.Dimension2D;
import Tileset.TileMap;

public class ColumnHeading extends JPanel
	implements SceneListener
{
	private Camera camera;
	
	private EditorResources resources;
	
	public ColumnHeading(EditorResources resources, Camera camera)
	{
		this.resources = resources;
		this.camera = camera;
		
		resources.addSceneListener(this);
		
		setPreferredSize(new Dimension(600, 25));
	}
	
	public void paintComponent(Graphics g)
	{
		super.paintComponent(g);
		
		TileMap map = resources.scene.getTileMap();
		
		Rectangle2D.Double bound = camera.normalViewBound();
		
		int startCol = map.row(bound.x),
			endCol = map.row(bound.x + bound.width) + 1;
		
		Dimension2D.Double tileSize = map.tileSize();
	
		GraphicsContext gc = new GraphicsContext(
				(Graphics2D)g.create(), camera);
	
		double shapeWidth = tileSize.getWidth(),
			   shapeHeight = camera.normalHeight(getHeight());
		
		Rectangle2D.Double shape = new Rectangle2D.Double(
				0, 0, shapeWidth, shapeHeight);
		
		ShapeGraphic graph = new ShapeGraphic();
		
		graph.setShape(shape);
		graph.setFilled(false);
		graph.setStroke(new BasicStroke(1f));
		
		double y = camera.normalY(0);
		
		for(int col = startCol; col < endCol; col++)
		{
			double x = map.x(col);
			graph.setLoc(x + shape.width/2, y + shape.height/2);
		
			graph.paint(gc);
		}
		
		gc.g2d.dispose();
	}
	
	@Override
	public void sceneChanged()
	{
		repaint();
	}
}
