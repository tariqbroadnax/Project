package Graphic;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.Rectangle2D.Double;

import Utilities.Fonts;

public class TextGraphic extends Graphic
{
	protected String text;

	private double charHeight, charWidth;
		
	private Paint paint;

	private String fontName;

	private int style;
	
	public TextGraphic()
	{
		text = "EMPTY";
		
		fontName = "Consolas";
		
		style = Font.PLAIN;
		
		paint = Color.RED;
		
		charHeight = 10;
		charWidth = 5;
	}
	
	public TextGraphic(TextGraphic graphic)
	{
		super(graphic);
		
		text = graphic.text;
	
		fontName = graphic.fontName;
		
		style = graphic.style;
		
		paint = graphic.paint;
		
		charHeight = graphic.charHeight;
		charWidth = graphic.charWidth;
	}
			
	protected void _paint(GraphicsContext gc)
	{
		FontMetrics metrics = gc.g2d.getFontMetrics(font);
		
		int w = metrics.stringWidth(" "),
			h = metrics.getHeight();
		
		double scrCharW = gc.camera.screenWidth(charWidth),
			   scrCharH = gc.camera.screenHeight(charHeight);
		
		double screenHeight = 
				gc.camera.screenHeight(normHeight);
		
		Font font = new Font(fontName, 12, style);		
		
		
		Point2D.Double screenLoc = 
				gc.camera.screenLocation2D(loc);
		
		gc.g2d.setPaint(paint);
		gc.g2d.setFont(font);
		gc.g2d.drawString(text, (float)screenLoc.x, (float)screenLoc.y);	
	}

	public void setText(String text) {
		this.text = text;
	}
	
	public void setFont(Font font) {
		this.font = font;
	}
	
	public void setPaint(Paint paint) {
		this.paint = paint;
	}
	
	public void setCharHeight(double charHeight) {
		this.charHeight = charHeight;
	}
	
	public void setCharWidth(double charWidth) {
		this.charWidth = charWidth;
	}
	
	public void 
	
	@Override
	public Double getBound() 
	{
		return new Rectangle2D.Double(
				loc.x , loc.y - normHeight,
				normHeight * text.length(),
				normHeight);
	}

	@Override
	public Object clone() {
		return new TextGraphic(this);
	}
}
