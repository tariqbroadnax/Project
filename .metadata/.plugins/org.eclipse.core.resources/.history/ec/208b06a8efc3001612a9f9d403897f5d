package Editor.comp;

import java.awt.BasicStroke;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.event.MouseEvent;
import java.awt.geom.Rectangle2D;

import javax.swing.JComponent;
import javax.swing.SwingUtilities;

import Editor.EditorResources;
import Editor.SceneListener;
import EditorGUI.MouseListener;
import Graphic.Camera;
import Tileset.TileMap;

public class TileMapComp extends JComponent
	implements SceneListener, MouseListener
{
	private EditorResources resources;
	private TileMap tm;
	private Camera camera;
	
	public TileMapComp(
			EditorResources resources,
			TileMap tm, Camera camera)
	{
		this.resources = resources;
		this.tm = tm;
		this.camera = camera;
		
		updateLocAndSize();
	}
	
	private void updateLocAndSize()
	{
		Rectangle2D.Double bound = tm.getBound();
		Rectangle scrBound = camera.onScreenBound(bound);
		
		setLocation(scrBound.x, scrBound.y);
		setSize(scrBound.width, scrBound.height);
	}
	
	public void paintComponent(Graphics g)
	{
		super.paintComponent(g);
		
		if(resources.selection == tm)
		{
			
		}
	}
	
	private void paintSelectionIndicator(Graphics g)
	{
		float width = 5,
			  miterLimit = 1,
			  dashOffset = 0;
		
		int cap = BasicStroke.CAP_SQUARE,
			join = BasicStroke.JOIN_MITER;
		
		float[] dash = {10f};
		
		
	}

	@Override
	public void sceneChanged() 
	{
		updateLocAndSize();
	}
	
	@Override
	public void mousePressed(MouseEvent e) 
	{
		if(SwingUtilities.isLeftMouseButton(e))
		{
			if(resources.selection == null ||
			   resources.sceneSelection)
			{
				resources.selection = tm;
				repaint();
			}
		}
	}
}
