package Modifiers;

import java.time.Duration;

import EntityComponent.Lifetime;

public abstract class TickEffect extends Effect
{
	private Span nextTick, lifespan;
	
	public TickEffect()
	{
		ticktime = new Lifetime(250);
		lifetime = new Lifetime(1000);
	}
	
	public TickEffect(TickEffect effect)
	{
		ticktime = (Lifetime) ticktime.clone();
		lifetime = (Lifetime) lifetime.clone();
	}
	
	@Override
	public void update(Duration delta) 
	{
		ticktime.update(delta);
		lifetime.update(delta);
		
		if(ticktime.isLifeOver())
		{
			apply();

			ticktime.reset();
		}
	}
	
	protected abstract void apply();
	
	@Override
	public boolean isFinished() {
		return lifetime.isLifeOver();
	}
	
	public void setTicktime(Lifetime ticktime) {
		this.ticktime = ticktime;
	}
	
	public void setLifetime(Lifetime lifetime) {
		this.lifetime = lifetime;
	}
	
	public long getTickDelay() {
		return nextTick.getLength();
	}
	
	public long getLifespanLength() {
		return lifespan.getLength();
	}
}
